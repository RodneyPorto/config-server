server:
  port: 51060
  
spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    
  data:
    mongodb:
      database: mp_init_transactions
      host: localhost
      
management:
  endpoints:
    web:
      exposure:
        include: "*"    
    
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health      
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    
security:
  oauth2:
    resource:
      userInfoUri: http://localhost:8880/validateClient  
      
amqp:
  init-transactions:
    exchange:
      created:
        init-transaction: created_init_transaction

  events:
    queue:
      created:
        request: createad_event_queue
    exchange:
      created: created_events
    key:
      created:
        request: events
        
oauth:
  client_id: mp_init_transaction_client
  client_secret: NzQgYTkgMjkgNTEgZTQgNmYgN2QgZDAgZDUgMTEgZjggOWYgZDggNWMgZGIg

captures:
  service: MP-CAPTURES

auth:
  service: MP-AUTHSERVER
  path: /oauth/token        
  
beneficiary:
  service: MP-BENEFICIARIES
  
breakdowns:
  service: MP-BREAKDOWNS

webapp:
  url: http://localhost:4200

---
spring:
  profiles: integration
  data:
    mongodb:
      database: mp_init_transactions
      host: localhost
      port: 27018
  rabbitmq:
    host: o2c.ovh
    port: 5672
    username: master-pay
    password: master123      
      
webapp:
  url: http://webapp-integration.o2c.ovh
  
---
spring:
  profiles: qa
  data:
    mongodb:
      database: mp_init_transactions
      host: localhost
      port: 27018
  rabbitmq:
    host: localhost
    port: 5672
    username: master-pay
    password: master123      
      
webapp:
  url: http://qa.o2c.ovh
  
